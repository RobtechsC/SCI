/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package PANTALLAS;

import CLASES.DataUser;
import CLASES.ModuloMySQL;
import CLASES.ModuloMySQLSOL;
import CLASES.ValoresEstaticos;
import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.File;
import java.io.IOException;
import java.net.InetAddress;
import java.net.MalformedURLException;
import java.net.UnknownHostException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author erobles
 */
public class Login extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
        //getListEmpr();
        
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();   
        int w = this.getSize().width;
        int h = this.getSize().height;
        int x = (dim.width-w)/2;
        int y = (dim.height-h)/2;
        this.setLocation(x, y);
        jLabel3.setText("Sistema de Control de Indicadores V"+ValoresEstaticos.version_sci);
        //testUpdate();
        jTextField1.setText(DataUser.getusername());
        jPassword.requestFocus();
        jPassword.addKeyListener(new KeyListener() {

            @Override
            public void keyTyped(KeyEvent e) {
                
            }

            @Override
            public void keyPressed(KeyEvent e) {
                   int key=e.getKeyCode();
                if (key==KeyEvent.VK_ENTER){
                    new Thread(){
           @Override
           public void run(){
               loginUser();
           }
       }.start();
       espere.setVisible(true);
                }}

            @Override
            public void keyReleased(KeyEvent e) {
                
            }
        });
        Image i=new ImageIcon("C://SCI//SCI.png").getImage();
        this.setIconImage(i);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jPassword = new javax.swing.JPasswordField();
        jButtonLogin = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Inicio de Sesion");
        setBackground(new java.awt.Color(0, 0, 0));
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(0, 102, 153));
        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMGS/candado_1.png"))); // NOI18N
        jLabel1.setText("INICIO DE SESION");
        jLabel1.setOpaque(true);

        jLabel3.setBackground(new java.awt.Color(0, 51, 102));
        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 204, 204));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("SRC V1.0");
        jLabel3.setBorder(new javax.swing.border.MatteBorder(null));
        jLabel3.setOpaque(true);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        jLabel5.setBackground(new java.awt.Color(255, 102, 0));
        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Digite su usuario");
        jLabel5.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel5.setOpaque(true);

        jTextField1.setBackground(new java.awt.Color(102, 102, 102));
        jTextField1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(255, 255, 255));
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setToolTipText("");
        jTextField1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        jLabel2.setBackground(new java.awt.Color(255, 102, 0));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Digite su Contrase√±a");
        jLabel2.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel2.setOpaque(true);

        jPassword.setBackground(new java.awt.Color(102, 102, 102));
        jPassword.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jPassword.setForeground(new java.awt.Color(255, 255, 255));
        jPassword.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPassword.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPasswordKeyPressed(evt);
            }
        });

        jButtonLogin.setBackground(new java.awt.Color(51, 51, 51));
        jButtonLogin.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonLogin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMGS/candadocerrado.png"))); // NOI18N
        jButtonLogin.setBorder(null);
        jButtonLogin.setFocusable(false);
        jButtonLogin.setOpaque(false);
        jButtonLogin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonLoginMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonLoginMouseExited(evt);
            }
        });
        jButtonLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLoginActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(261, 261, 261)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPassword)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))
                .addGap(40, 40, 40)
                .addComponent(jButtonLogin)
                .addContainerGap(176, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jLabel5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jButtonLogin)))
                .addContainerGap(54, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel8.setBackground(new java.awt.Color(0, 102, 153));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMGS/logo_1.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(218, 218, 218)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(242, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLoginActionPerformed
        // TODO add your handling code here:
        
       
       new Thread(){
           @Override
           public void run(){
               loginUser();
           }
       }.start();
       espere.setVisible(true);
        
    }//GEN-LAST:event_jButtonLoginActionPerformed
    public final void testUpdate(){
        user.setusername("testUpdaterSCI");
        user.setPassword("robtech2014");
        m.setUser();
        if (m.testLogin()){
            testImageLogo();
            try {
                ResultSet rs=m.Listar("Select Version from Version_SCI where Tested='1' order By Version Desc Limit 1");
                if (rs.first()){
                 float version=rs.getFloat("Version");
                 if (version>ValoresEstaticos.version_sci){
                     JOptionPane.showMessageDialog(rootPane, "Se encontr√≥ una actualizaci√≥n para el sistema. Se cerrar√° y comenzar√° el proceso de actualizaci√≥n","Buscando Actualizaciones",JOptionPane.INFORMATION_MESSAGE);
                     File f=new File("C:\\SCI\\Updater\\SCI_Updater.jar");
                     Desktop.getDesktop().open(f);
                     System.exit(0);
                     
                 }
                 else{
                     JOptionPane.showMessageDialog(rootPane, "Sistema Actualizado", "Buscando Actualizaciones", JOptionPane.INFORMATION_MESSAGE);
                    String user=System.getProperty("user.name").trim();
                    DataUser d=new DataUser();
                    d.setusername(user);}
                }
                else{
                    JOptionPane.showMessageDialog(rootPane, "Error buscando actualizaciones. El sistema se cerrar√°");
               System.exit(0);}
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Error de conexion con SQL. El sistema se cerrar√°.","Buscando Actualizaciones",JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
                System.exit(0);
            } catch (IOException ex) {
                 JOptionPane.showMessageDialog(rootPane, "Error Procesando la Actualizacion. El sistema se cerrar√°.","Buscando Actualizaciones",JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
                System.exit(0);
            }
        }
        else{
            JOptionPane.showMessageDialog(rootPane, "Error Procesando la Actualizacion. Revise que tenga internet y vuelva a intentarlo en unos segundos. El sistema se cerrar√°.","Buscando Actualizaciones",JOptionPane.ERROR_MESSAGE);
            System.exit(0);
        }
        
        
    }
   
    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_formKeyPressed

    private void jButtonLoginMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonLoginMouseEntered
        // TODO add your handling code here:
        
        jButtonLogin.setIcon(new ImageIcon("C:/SCI/IMGS/candadoabierto.png"));
    }//GEN-LAST:event_jButtonLoginMouseEntered
    public void testImageLogo(){
        File f=new File("C:/SCI/SCI.png");
        if (f.exists()==false){
            m.getLogoImage();
        }
    }
    private void jButtonLoginMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonLoginMouseExited
        // TODO add your handling code here:
        jButtonLogin.setIcon(new ImageIcon("C:/SCI/IMGS/candadocerrado.png"));
    }//GEN-LAST:event_jButtonLoginMouseExited

    private void jPasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordKeyPressed
        // TODO add your handling code here:
       /* if (evt.getKeyCode()==KeyEvent.VK_ENTER){
            jButtonLoginActionPerformed(null);
        }*/
    }//GEN-LAST:event_jPasswordKeyPressed
    public void isAdministrator(){
        try {
            ResultSet rs=m.Listar("Select admin from UsuariosRegistrados where Usuario='"+DataUser.username+"' and admin='1'");
            if (rs.first()){
                DataUser.setAdministrator(true);
                
            }
            else{
                 DataUser.setAdministrator(false);
            }
        } catch (SQLException ex) {
             DataUser.setAdministrator(false);
        }
    }
    
    public void loginUser(){
    char pass[]=this.jPassword.getPassword();
        user.setPassword(String.valueOf(pass));
        user.setusername(this.jTextField1.getText());
        
        if (m.setUser()){
            m2.setUser();
            isAdministrator();
        try {
                try {
                    String[] ip=getIp();
                    if (ip!=null){
                    ValoresEstaticos.setIdPC(ip[0]+"-"+ip[1]);
                    m.Ejecutar("insert into ControlSesiones (Fecha, IP_Local, PC_Name, Usuario, VersionSCI) values (CURRENT_TIMESTAMP(),'"+ip[0]+"','"+ip[1]+"',USER(),'"+ValoresEstaticos.version_sci+"')");}
                    else{
                        JOptionPane.showConfirmDialog(rootPane, "No se puede guardar registro de inicio de sesion o sesion no permitida, no se puede continuar.", "Sistema de Control de Indicadores", JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                   } 
                   catch (IOException ex) {
                    Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
                }
           
            
            ResultSet rs=m.Listar("Select IdEmpresa, reporteria_general, ingreso_control_ingresos, reportes_control_ingresos,  ingreso_control_llantas, reportes_control_llantas, ingresos_control_aceites, reporteria_control_aceites, ingresos_control_baterias, reporteria_control_baterias, cambios_parametros_empresa, creacion_ordenestrabajo, cierre_ordenestrabajo from ListadoUsuariosxEmpresa where Usuario='"+DataUser.getusername()+"'");
            
            rs.first();
            ValoresEstaticos.setIdEmpresa(rs.getInt(1));
            DataUser.setPermisoControlAceites(rs.getBoolean("ingresos_control_aceites"));
            DataUser.setPermisoControlBaterias(rs.getBoolean("ingresos_control_baterias"));
            DataUser.setPermisoControlIngresos(rs.getBoolean("ingreso_control_ingresos"));
            DataUser.setPermisoControlLlantas(rs.getBoolean("ingreso_control_llantas"));
            DataUser.setPermisoControlParametros(rs.getBoolean("cambios_parametros_empresa"));
            DataUser.setPermisoReporteriaControlAceites(rs.getBoolean("reporteria_control_aceites"));
            DataUser.setPermisoReporteriaControlBaterias(rs.getBoolean("reporteria_control_baterias"));
            DataUser.setPermisoReporteriaControlIngresos(rs.getBoolean("reportes_control_ingresos"));
            DataUser.setPermisoReporteriaControlLlantas(rs.getBoolean("reportes_control_llantas"));
            DataUser.setPermisoReporteriaGeneral(rs.getBoolean("reporteria_general"));
            DataUser.setPermisoCreacionOrdenesTrabajo(rs.getBoolean("creacion_ordenestrabajo"));
            DataUser.setPermisoCierreOrdenesTrabajo(rs.getBoolean("cierre_ordenestrabajo"));
            ResultSet em=m.Listar("Select Nombre_Empresa from Empresas where CodigoEmpresa='"+rs.getInt(1)+"'");
            em.first();
            ValoresEstaticos.setNombreEmpresa(em.getString("Nombre_Empresa"));
            java.awt.EventQueue.invokeLater(new Runnable() {
                @Override
                public void run() {
                    if (user.getusername().contains("ecastro")==false)
                    {
                        espere.setVisible(false);
                        new Principal().setVisible(true);}
                    else{
                        espere.setVisible(false);
                        new Reporteria().setVisible(true);
                    }
                }
            });
            this.dispose();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Error, no se encontro el usuario registrado en ninguna empresa");
            JOptionPane.showMessageDialog(rootPane, ex);
        }
        }
        else {
            espere.setVisible(false);
            JOptionPane.showMessageDialog(rootPane, "Error al iniciar sesion");
            jPassword.setText("");
            jPassword.requestFocus();
        }
    }
    public String[] getIp() throws MalformedURLException, IOException {
      InetAddress ip;
        String hostname;
        try {
            ip = InetAddress.getLocalHost();
            hostname = ip.getHostName();
            String [] ipconfig=new String[2];
            ipconfig[0]=ip.getHostAddress();
            ipconfig[1]=ip.getCanonicalHostName();
            return ipconfig;
            //System.out.println("Your current Hostname : " + hostname);
 
        } catch (UnknownHostException e) {
            
            e.printStackTrace();
            return null;
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonLogin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPasswordField jPassword;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
    static DataUser user=new DataUser();
    static ModuloMySQL m=new ModuloMySQL();
    static ModuloMySQLSOL m2=new ModuloMySQLSOL();
    static ResultSet list;
    static ValoresEstaticos val=new ValoresEstaticos();
    JFrame f=this;
    public Espere espere=new Espere(null, false, "Iniciando sesion");

    
}
